<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Cidades_Codigo" xml:space="preserve">
    <value>Campo Codio da Cidade, Inválido!</value>
  </data>
  <data name="Cidades_Nome" xml:space="preserve">
    <value>Campo Nome da Cidade, Invalido!</value>
  </data>
  <data name="Cidades_UF" xml:space="preserve">
    <value>Campo UF, Inválido!</value>
  </data>
  <data name="Clientes_Bairro" xml:space="preserve">
    <value>Campo Bairro, Inválido!</value>
  </data>
  <data name="Clientes_CNPJorCPF" xml:space="preserve">
    <value>Campo CNPJ/CPF, Inválido!</value>
  </data>
  <data name="Clientes_Complemento" xml:space="preserve">
    <value>Campo Complemento, Inválido!</value>
  </data>
  <data name="Clientes_CPF" xml:space="preserve">
    <value>Campo CPF, Inválido!</value>
  </data>
  <data name="Clientes_Inscricao" xml:space="preserve">
    <value>Campo Inscrição, Inválido!</value>
  </data>
  <data name="Clientes_Nome" xml:space="preserve">
    <value>Campo Nome do Cliente, Inválido!</value>
  </data>
  <data name="Clientes_NomeServico" xml:space="preserve">
    <value>Campo Nome do Serviço, Inválido!</value>
  </data>
  <data name="Clientes_NumLogradouro" xml:space="preserve">
    <value>Campo Numero do Logradouro, Inválido!</value>
  </data>
  <data name="Clientes_TipoLogradouro" xml:space="preserve">
    <value>Campo Tipo Logradouro, Inválido!</value>
  </data>
  <data name="Clientes_TipoPessoa" xml:space="preserve">
    <value>Campo Tipo Pessoa, Inválido!</value>
  </data>
  <data name="Clientes_Valor" xml:space="preserve">
    <value>Campo Valor, Inválido!</value>
  </data>
  <data name="Email_Invalido" xml:space="preserve">
    <value>Campo Email, inválido!</value>
  </data>
  <data name="NotasFiscais_Assinatura" xml:space="preserve">
    <value>Campo Assinatura, Inválido!</value>
  </data>
  <data name="NotasFiscais_DataEmissao" xml:space="preserve">
    <value>Campo Data de Emissão, Inválido!</value>
  </data>
  <data name="NotasFiscais_Lote" xml:space="preserve">
    <value>Campo Lote, Inválido!</value>
  </data>
  <data name="NotasFiscais_Motivo" xml:space="preserve">
    <value>Campo Motivo, Inválido!</value>
  </data>
  <data name="NotasFiscais_Numero" xml:space="preserve">
    <value>Campo Numero da Nota Fiscal, Inválido!</value>
  </data>
  <data name="NotasFiscais_Protocolo" xml:space="preserve">
    <value>Campo Protocolo, Inválido!</value>
  </data>
  <data name="NotasFiscais_RPS" xml:space="preserve">
    <value>Campo RPS, Inválido!</value>
  </data>
  <data name="NotasFiscais_Status" xml:space="preserve">
    <value>Campo Status da Nota Fiscal, Inválido!</value>
  </data>
  <data name="NotasFiscais_Verificacao" xml:space="preserve">
    <value>Campo Verificação, Inválido!</value>
  </data>
  <data name="RegimeClientes_Codigo" xml:space="preserve">
    <value>Campo Codigo, Inválido!</value>
  </data>
  <data name="RegimeClientes_Deducoes" xml:space="preserve">
    <value>Campo Deduçoes, Inválido!</value>
  </data>
  <data name="RegimeClientes_Nome" xml:space="preserve">
    <value>Campo Regime Tributário, Inválido!</value>
  </data>
  <data name="RegimeClientes_Tributo" xml:space="preserve">
    <value>Campo Tributo, Inválido!</value>
  </data>
  <data name="TipoClientes_Nome" xml:space="preserve">
    <value>Campo Tipo de Cliente, Inválido!</value>
  </data>
  <data name="Usuarios_ConfirmarSenha" xml:space="preserve">
    <value>Campo Confirmar Senha, Inválido!</value>
  </data>
  <data name="Usuarios_Perfil" xml:space="preserve">
    <value>Campo Perfil, Inválido!</value>
  </data>
  <data name="Usuarios_Senha" xml:space="preserve">
    <value>Campo Senha, Invalido!</value>
  </data>
  <data name="Usuarios_Usuario" xml:space="preserve">
    <value>Campo Usuário, Inválido!</value>
  </data>
  <data name="Clientes_Cep" xml:space="preserve">
    <value>Campo Cep, Inválido!</value>
  </data>
  <data name="Clientes_Id" xml:space="preserve">
    <value>Id Inválido!</value>
  </data>
</root>